apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-parcelize'

apply from: rootDir.absolutePath + "/gradle/config-compose.gradle"

repositories {
    mavenCentral()
    google()
    maven { url "https://jitpack.io" }
}

group = 'com.github.thementalgoose'

android {
    compileSdk 34

    namespace "tmg.aboutthisapp"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        androidTest.resources.srcDirs += 'src/androidTest/res'
        test.java.srcDirs += 'src/test/java'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            all {
                afterSuite { desc, result ->
                    if (!desc.parent) {
                        println "\n======================================================================="
                        println "${desc.displayName}"
                        println "Test result: ${result.resultType}"
                        println "Test summary: ${result.testCount} tests, " +
                                "${result.successfulTestCount} succeeded, " +
                                "${result.failedTestCount} failed, " +
                                "${result.skippedTestCount} skipped"
                        println "======================================================================="
                    }
                }
                useJUnitPlatform()
                testLogging {
                    events "passed", "skipped", "failed", "standardOut", "standardError"
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libs.kotlin.stdlib
    implementation libs.androidx.appcompat
    implementation libs.androidx.core

    implementation libs.coil

    testImplementation libs.turbine
    testImplementation libs.junit5.api
    testImplementation libs.junit5.engine
    testImplementation libs.junit5.params
    testRuntimeOnly libs.junit5.engine

    testImplementation libs.junit5.jupiter
    testImplementation libs.mockk
}

project.afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
            }
        }
    }
}
